/***************************** CUSTOM DUPLICATION *****************************/
// Overrides autogenerated function
void duplicateBrick() {
  fetchArchEnt(getUuid("Brick"), new FetchCallback() {
    onFetch(entity) {
      if (entity == null)
        return;
      duplicateBrick(entity.getGeometryList());
    }

    onError(message) {
      showToast(message);
    }
  });
}

void duplicateBrick(List geometry){
  String tabgroup = "Brick";
  String uuidOld = getUuid(tabgroup);
  setUuid(tabgroup, "");
  disableAutoSave(tabgroup);
  incAutoNum("Brick/Site/Brick_ID");
  //clearGpsInTabGroup(tabgroup);
  populateAuthorAndTimestamp(tabgroup);
  populateEntityListsInTabGroup(tabgroup);
  populateCameraPictureGallery("Brick/Site/Location_Plans", new ArrayList());
  populateCameraPictureGallery("Brick/Description/Brick_Photo", new ArrayList());
  populateCameraPictureGallery("Brick/Description/Frog_Photo", new ArrayList());
  executeOnEvent(tabgroup, "copy");

  saveCallback = new SaveCallback() {
    onSave(uuid, newRecord) {
      setUuid(tabgroup, uuid);

      fetchAll(getDuplicateRelnQuery(uuidOld), new FetchCallback(){
        onFetch(result) {
          Log.e("Module", result.toString());

          if (result != null && result.size() >= 1) {
            parentTabgroup__ = result.get(0).get(4);
            parentTabgroup__ = parentTabgroup__.replaceAll(" ", "_");
          }

          makeDuplicateRelationships(result, getUuid(tabgroup));

          showToast("{Duplicated_record}");
          dialog.dismiss();
        }
      });

      saveTabGroup(tabgroup);
    }
  };

  String extraDupeAttributes = "";
  fetchAll(getDuplicateAttributeQuery(uuidOld, extraDupeAttributes), new FetchCallback(){
    onFetch(result) {
      excludeAttributes = new ArrayList();

      excludeAttributes.add("Location Plans");
      excludeAttributes.add("Brick Photo");
      excludeAttributes.add("Frog Photo");

      duplicateTabGroup(tabgroup, geometry, getExtraAttributes(result), excludeAttributes, saveCallback);
    }
  });
}
